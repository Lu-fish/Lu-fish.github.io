<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://Lu-fish.github.io</id>
    <title>blog here</title>
    <updated>2020-08-02T04:49:32.486Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://Lu-fish.github.io"/>
    <link rel="self" href="https://Lu-fish.github.io/atom.xml"/>
    <subtitle>&lt;h1&gt;a fish&lt;/h1&gt;</subtitle>
    <logo>https://Lu-fish.github.io/images/avatar.png</logo>
    <icon>https://Lu-fish.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, blog here</rights>
    <entry>
        <title type="html"><![CDATA[三角函数]]></title>
        <id>https://Lu-fish.github.io/post/san-jiao-han-shu/</id>
        <link href="https://Lu-fish.github.io/post/san-jiao-han-shu/">
        </link>
        <updated>2020-08-02T04:39:59.000Z</updated>
        <content type="html"><![CDATA[<p>咕咕咕</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[走迷宫V1.5代码]]></title>
        <id>https://Lu-fish.github.io/post/zou-mi-gong-v15-dai-ma/</id>
        <link href="https://Lu-fish.github.io/post/zou-mi-gong-v15-dai-ma/">
        </link>
        <updated>2020-03-14T12:36:57.000Z</updated>
        <content type="html"><![CDATA[<p>#下载：https://github.com/thefish12/hello-world</p>
<pre><code class="language-cpp">#include&lt;iostream&gt;
#include&lt;cstdlib&gt;
#include&lt;ctime&gt; 
#include&lt;string&gt;
#include&lt;conio.h&gt;
using namespace std;
char map[100][100];
int N; 
bool vst[100][100];
int dx[4]={0,1,0,-1};
int dy[4]={1,0,-1,0};
void print(){
	for(int i=1;i&lt;=N;i++,cout&lt;&lt;endl)
		for(int j=1;j&lt;=N;j++)
			cout&lt;&lt;map[i][j];
}
void dfs(int x,int y){
	if(map[x][y]=='#'&amp;&amp;x==1&amp;&amp;y==1)return ; 
	vst[x][y]=1;	
	if(vst[N][N])return;
	for(int k=0;k&lt;4;k++){
		int nx=x+dx[k],ny=y+dy[k];
		if(!vst[nx][ny]&amp;&amp;map[nx][ny]=='_'&amp;&amp;nx&gt;=1&amp;&amp;nx&lt;=N&amp;&amp;ny&gt;=1&amp;&amp;ny&lt;=N){						
			dfs(nx,ny);			
		}
	}
}
void easy(){
	print();
	int x=1,y=1;
	while(1){
		if(x==N&amp;&amp;y==N){
			cout&lt;&lt;&quot;到了！\n&quot;;
			return; 
		}
		char a = getch();
		if(a=='w'){
			int nx=x+dx[3],ny=y+dy[3];
			if(map[nx][ny]=='#'||nx&lt;=0||nx&gt;N||ny&lt;=0||ny&gt;N){
				cout&lt;&lt;&quot;撞墙了QAQ\n&quot;;
				continue; 
			}
			else{
				map[x][y]='_';
				map[nx][ny]='*';
				system(&quot;cls&quot;);
				print();
				x=nx,y=ny;
			}
		}
		else if(a=='d'){//correct
			int nx=x+dx[0],ny=y+dy[0];
			if(map[nx][ny]=='#'||nx&lt;=0||nx&gt;N||ny&lt;=0||ny&gt;N){
				cout&lt;&lt;&quot;撞墙了QAQ\n&quot;;
				continue; 
			}
			else{
				map[x][y]='_';
				map[nx][ny]='*';
				system(&quot;cls&quot;);
				print();
				x=nx,y=ny;
			}
		}
		else if(a=='s'){
			int nx=x+dx[1],ny=y+dy[1];
			if(map[nx][ny]=='#'||nx&lt;=0||nx&gt;N||ny&lt;=0||ny&gt;N){
				cout&lt;&lt;&quot;撞墙了QAQ\n&quot;;
				continue; 
			}
			else{
				map[x][y]='_';
				map[nx][ny]='*';
				system(&quot;cls&quot;);
				print();
				x=nx,y=ny;
			}
		}
		else if(a=='a'){
			int nx=x+dx[2],ny=y+dy[2];
			if(map[nx][ny]=='#'||nx&lt;=0||nx&gt;N||ny&lt;=0||ny&gt;N){
				cout&lt;&lt;&quot;撞墙了QAQ\n&quot;;
				continue; 
			}
			else{
				map[x][y]='_';
				map[nx][ny]='*';
				system(&quot;cls&quot;);
				print();
				x=nx,y=ny;
			}
		}
		else{
			cout&lt;&lt;&quot;大哥您输入了什么鬼啊&quot;;
			continue; 
		}
	}
} 


//------------------================================-------------------//


void normal(int num){
	for(int i=1-num;i&lt;=1+num;i++){
		if(i&lt;=0)continue;
		for(int j=1-num;j&lt;=1+num;j++){
			if(j&lt;=0)continue;
			cout&lt;&lt;map[i][j];
		}
		cout&lt;&lt;endl;
	}
	int x=1,y=1;
	while(1){
		if(x==N&amp;&amp;y==N){
			cout&lt;&lt;&quot;到了！\n&quot;;
			return; 
		}
		char a = getch();
		if(a=='w'){
			int nx=x+dx[3],ny=y+dy[3];
			if(map[nx][ny]=='#'||nx&lt;=0||nx&gt;N||ny&lt;=0||ny&gt;N){
				cout&lt;&lt;&quot;撞墙了QAQ\n&quot;;
				continue; 
			}
			else{
				map[x][y]='_';
				map[nx][ny]='*';
				system(&quot;cls&quot;);
				//print here
				for(int i=nx-num;i&lt;=nx+num;i++){
					if(i&lt;=0)continue;
					for(int j=ny-num;j&lt;=ny+num;j++){
						if(j&lt;=0)continue;
						cout&lt;&lt;map[i][j];
					}
					cout&lt;&lt;endl;
				}
				//stop print 
				x=nx,y=ny;
			}
		}
		else if(a=='d'){//correct
			int nx=x+dx[0],ny=y+dy[0];
			if(map[nx][ny]=='#'||nx&lt;=0||nx&gt;N||ny&lt;=0||ny&gt;N){
				cout&lt;&lt;&quot;撞墙了QAQ\n&quot;;
				continue; 
			}
			else{
				map[x][y]='_';
				map[nx][ny]='*';
				system(&quot;cls&quot;);
				for(int i=nx-num;i&lt;=nx+num;i++){
					if(i&lt;=0)continue;
					for(int j=ny-num;j&lt;=ny+num;j++){
						if(j&lt;=0)continue;
						cout&lt;&lt;map[i][j];
					}
					cout&lt;&lt;endl;
				}
				x=nx,y=ny;
			}
		}
		else if(a=='s'){
			int nx=x+dx[1],ny=y+dy[1];
			if(map[nx][ny]=='#'||nx&lt;=0||nx&gt;N||ny&lt;=0||ny&gt;N){
				cout&lt;&lt;&quot;撞墙了QAQ\n&quot;;
				continue; 
			}
			else{
				map[x][y]='_';
				map[nx][ny]='*';
				system(&quot;cls&quot;);
				for(int i=nx-num;i&lt;=nx+num;i++){
					if(i&lt;=0)continue;
					for(int j=ny-num;j&lt;=ny+num;j++){
						if(j&lt;=0)continue;
						cout&lt;&lt;map[i][j];
					}
					cout&lt;&lt;endl;
				}
				x=nx,y=ny;
			}
		}
		else if(a=='a'){
			int nx=x+dx[2],ny=y+dy[2];
			if(map[nx][ny]=='#'||nx&lt;=0||nx&gt;N||ny&lt;=0||ny&gt;N){
				cout&lt;&lt;&quot;撞墙了QAQ\n&quot;;
				continue; 
			}
			else{
				map[x][y]='_';
				map[nx][ny]='*';
				system(&quot;cls&quot;);
				for(int i=nx-num;i&lt;=nx+num;i++){
					if(i&lt;=0)continue;
					for(int j=ny-num;j&lt;=ny+num;j++){
						if(j&lt;=0)continue;
						cout&lt;&lt;map[i][j];
					}
					cout&lt;&lt;endl;
				}
				x=nx,y=ny;
			}
		}
		else{
			cout&lt;&lt;&quot;大哥您输入了什么鬼啊&quot;;
			continue; 
		}
	}	
}


//-----------------====================================--------------------------- 



int main(){
	srand(time(0));
	cout&lt;&lt;&quot;输入wasd控制方向，_为空地，#为墙，*为当前地点,P为终点\n&quot;;//介绍 
	cout&lt;&lt;&quot;输入地图大小：&quot;;
	cin&gt;&gt;N; 
	cout&lt;&lt;&quot;地图生成中……&quot;;
	while(1){				
		for(int i=1;i&lt;=N;i++)
			for(int j=1;j&lt;=N;j++)
			{				
				int a=rand()%8;
				if(a&lt;=3)map[i][j]='#';
				else map[i][j]='_';
			}
		dfs(1,1);
		if(vst[N][N]==1)break;
		for(int i=1;i&lt;=N;i++)for(int j=1;j&lt;=N;j++) vst[i][j]=0;
	}
	system(&quot;cls&quot;); 
	map[1][1]='*';
	map[N][N]='P';
	cout&lt;&lt;&quot;选择难度\n1为简单版，2为普通版，3为困难版,4为极难版（伸手不见五指）&quot;;
	int nd;
	cin&gt;&gt;nd;
	if(nd==1)
		easy();
	else if(nd==2) 
		normal(2);
	else if(nd==3)
		normal(1);
	else if(nd==4)
		normal(0); 
	else cout&lt;&lt;&quot;gameover!&quot;;
	
	system(&quot;pause&quot;);
	return 0;
} 
//update 3/12 v1.5
//
</code></pre>
]]></content>
    </entry>
</feed>