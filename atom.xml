<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://Lu-fish.github.io</id>
    <title>一条鱼的blog</title>
    <updated>2020-03-14T13:13:25.143Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://Lu-fish.github.io"/>
    <link rel="self" href="https://Lu-fish.github.io/atom.xml"/>
    <subtitle>&lt;h1&gt;a fish&lt;/h1&gt;</subtitle>
    <logo>https://Lu-fish.github.io/images/avatar.png</logo>
    <icon>https://Lu-fish.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 一条鱼的blog</rights>
    <entry>
        <title type="html"><![CDATA[题解 CF731A 【Night at the Museum】]]></title>
        <id>https://Lu-fish.github.io/post/ti-jie-cf731a-night-at-the-museum/</id>
        <link href="https://Lu-fish.github.io/post/ti-jie-cf731a-night-at-the-museum/">
        </link>
        <updated>2020-03-14T13:12:13.000Z</updated>
        <content type="html"><![CDATA[<p>这道题主要是要考察字符串的一些知识。</p>
<p>只要比较顺时针与逆时针那个更短再加到ans里就可以了。</p>
<pre><code class="language-cpp">#include&lt;iostream&gt;
#include&lt;string&gt;
#include&lt;cmath&gt;
using namespace std;
//以上不解释
int main(){
    string s;
    cin&gt;&gt;s;
    int ans=0;//这里一定要初始化，不然会出来一个不知道什么数的数
    ans+=min(abs(s[0]-'a'),26-abs(s[0]-'a'));//比较顺时针转与逆时针转的较小值
    for(int i=1;i&lt;s.size();i++){
        ans+=min(abs(s[i]-s[i-1]),26-abs(s[i]-s[i-1]));//比较顺时针转与逆时针转的较小值
    }
    cout&lt;&lt;ans&lt;&lt;endl;//输出
    return 0;//结束求过qaq
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[走迷宫V1.5代码]]></title>
        <id>https://Lu-fish.github.io/post/zou-mi-gong-v15-dai-ma/</id>
        <link href="https://Lu-fish.github.io/post/zou-mi-gong-v15-dai-ma/">
        </link>
        <updated>2020-03-14T12:36:57.000Z</updated>
        <content type="html"><![CDATA[<pre><code class="language-cpp">#include&lt;iostream&gt;
#include&lt;cstdlib&gt;
#include&lt;ctime&gt; 
#include&lt;string&gt;
#include&lt;conio.h&gt;
using namespace std;
char map[100][100];
int N; 
bool vst[100][100];
int dx[4]={0,1,0,-1};
int dy[4]={1,0,-1,0};
void print(){
	for(int i=1;i&lt;=N;i++,cout&lt;&lt;endl)
		for(int j=1;j&lt;=N;j++)
			cout&lt;&lt;map[i][j];
}
void dfs(int x,int y){
	if(map[x][y]=='#'&amp;&amp;x==1&amp;&amp;y==1)return ; 
	vst[x][y]=1;	
	if(vst[N][N])return;
	for(int k=0;k&lt;4;k++){
		int nx=x+dx[k],ny=y+dy[k];
		if(!vst[nx][ny]&amp;&amp;map[nx][ny]=='_'&amp;&amp;nx&gt;=1&amp;&amp;nx&lt;=N&amp;&amp;ny&gt;=1&amp;&amp;ny&lt;=N){						
			dfs(nx,ny);			
		}
	}
}
void easy(){
	print();
	int x=1,y=1;
	while(1){
		if(x==N&amp;&amp;y==N){
			cout&lt;&lt;&quot;到了！\n&quot;;
			return; 
		}
		char a = getch();
		if(a=='w'){
			int nx=x+dx[3],ny=y+dy[3];
			if(map[nx][ny]=='#'||nx&lt;=0||nx&gt;N||ny&lt;=0||ny&gt;N){
				cout&lt;&lt;&quot;撞墙了QAQ\n&quot;;
				continue; 
			}
			else{
				map[x][y]='_';
				map[nx][ny]='*';
				system(&quot;cls&quot;);
				print();
				x=nx,y=ny;
			}
		}
		else if(a=='d'){//correct
			int nx=x+dx[0],ny=y+dy[0];
			if(map[nx][ny]=='#'||nx&lt;=0||nx&gt;N||ny&lt;=0||ny&gt;N){
				cout&lt;&lt;&quot;撞墙了QAQ\n&quot;;
				continue; 
			}
			else{
				map[x][y]='_';
				map[nx][ny]='*';
				system(&quot;cls&quot;);
				print();
				x=nx,y=ny;
			}
		}
		else if(a=='s'){
			int nx=x+dx[1],ny=y+dy[1];
			if(map[nx][ny]=='#'||nx&lt;=0||nx&gt;N||ny&lt;=0||ny&gt;N){
				cout&lt;&lt;&quot;撞墙了QAQ\n&quot;;
				continue; 
			}
			else{
				map[x][y]='_';
				map[nx][ny]='*';
				system(&quot;cls&quot;);
				print();
				x=nx,y=ny;
			}
		}
		else if(a=='a'){
			int nx=x+dx[2],ny=y+dy[2];
			if(map[nx][ny]=='#'||nx&lt;=0||nx&gt;N||ny&lt;=0||ny&gt;N){
				cout&lt;&lt;&quot;撞墙了QAQ\n&quot;;
				continue; 
			}
			else{
				map[x][y]='_';
				map[nx][ny]='*';
				system(&quot;cls&quot;);
				print();
				x=nx,y=ny;
			}
		}
		else{
			cout&lt;&lt;&quot;大哥您输入了什么鬼啊&quot;;
			continue; 
		}
	}
} 


//------------------================================-------------------//


void normal(int num){
	for(int i=1-num;i&lt;=1+num;i++){
		if(i&lt;=0)continue;
		for(int j=1-num;j&lt;=1+num;j++){
			if(j&lt;=0)continue;
			cout&lt;&lt;map[i][j];
		}
		cout&lt;&lt;endl;
	}
	int x=1,y=1;
	while(1){
		if(x==N&amp;&amp;y==N){
			cout&lt;&lt;&quot;到了！\n&quot;;
			return; 
		}
		char a = getch();
		if(a=='w'){
			int nx=x+dx[3],ny=y+dy[3];
			if(map[nx][ny]=='#'||nx&lt;=0||nx&gt;N||ny&lt;=0||ny&gt;N){
				cout&lt;&lt;&quot;撞墙了QAQ\n&quot;;
				continue; 
			}
			else{
				map[x][y]='_';
				map[nx][ny]='*';
				system(&quot;cls&quot;);
				//print here
				for(int i=nx-num;i&lt;=nx+num;i++){
					if(i&lt;=0)continue;
					for(int j=ny-num;j&lt;=ny+num;j++){
						if(j&lt;=0)continue;
						cout&lt;&lt;map[i][j];
					}
					cout&lt;&lt;endl;
				}
				//stop print 
				x=nx,y=ny;
			}
		}
		else if(a=='d'){//correct
			int nx=x+dx[0],ny=y+dy[0];
			if(map[nx][ny]=='#'||nx&lt;=0||nx&gt;N||ny&lt;=0||ny&gt;N){
				cout&lt;&lt;&quot;撞墙了QAQ\n&quot;;
				continue; 
			}
			else{
				map[x][y]='_';
				map[nx][ny]='*';
				system(&quot;cls&quot;);
				for(int i=nx-num;i&lt;=nx+num;i++){
					if(i&lt;=0)continue;
					for(int j=ny-num;j&lt;=ny+num;j++){
						if(j&lt;=0)continue;
						cout&lt;&lt;map[i][j];
					}
					cout&lt;&lt;endl;
				}
				x=nx,y=ny;
			}
		}
		else if(a=='s'){
			int nx=x+dx[1],ny=y+dy[1];
			if(map[nx][ny]=='#'||nx&lt;=0||nx&gt;N||ny&lt;=0||ny&gt;N){
				cout&lt;&lt;&quot;撞墙了QAQ\n&quot;;
				continue; 
			}
			else{
				map[x][y]='_';
				map[nx][ny]='*';
				system(&quot;cls&quot;);
				for(int i=nx-num;i&lt;=nx+num;i++){
					if(i&lt;=0)continue;
					for(int j=ny-num;j&lt;=ny+num;j++){
						if(j&lt;=0)continue;
						cout&lt;&lt;map[i][j];
					}
					cout&lt;&lt;endl;
				}
				x=nx,y=ny;
			}
		}
		else if(a=='a'){
			int nx=x+dx[2],ny=y+dy[2];
			if(map[nx][ny]=='#'||nx&lt;=0||nx&gt;N||ny&lt;=0||ny&gt;N){
				cout&lt;&lt;&quot;撞墙了QAQ\n&quot;;
				continue; 
			}
			else{
				map[x][y]='_';
				map[nx][ny]='*';
				system(&quot;cls&quot;);
				for(int i=nx-num;i&lt;=nx+num;i++){
					if(i&lt;=0)continue;
					for(int j=ny-num;j&lt;=ny+num;j++){
						if(j&lt;=0)continue;
						cout&lt;&lt;map[i][j];
					}
					cout&lt;&lt;endl;
				}
				x=nx,y=ny;
			}
		}
		else{
			cout&lt;&lt;&quot;大哥您输入了什么鬼啊&quot;;
			continue; 
		}
	}	
}


//-----------------====================================--------------------------- 



int main(){
	srand(time(0));
	cout&lt;&lt;&quot;输入wasd控制方向，_为空地，#为墙，*为当前地点,P为终点\n&quot;;//介绍 
	cout&lt;&lt;&quot;输入地图大小：&quot;;
	cin&gt;&gt;N; 
	cout&lt;&lt;&quot;地图生成中……&quot;;
	while(1){				
		for(int i=1;i&lt;=N;i++)
			for(int j=1;j&lt;=N;j++)
			{				
				int a=rand()%8;
				if(a&lt;=3)map[i][j]='#';
				else map[i][j]='_';
			}
		dfs(1,1);
		if(vst[N][N]==1)break;
		for(int i=1;i&lt;=N;i++)for(int j=1;j&lt;=N;j++) vst[i][j]=0;
	}
	system(&quot;cls&quot;); 
	map[1][1]='*';
	map[N][N]='P';
	cout&lt;&lt;&quot;选择难度\n1为简单版，2为普通版，3为困难版,4为极难版（伸手不见五指）&quot;;
	int nd;
	cin&gt;&gt;nd;
	if(nd==1)
		easy();
	else if(nd==2) 
		normal(2);
	else if(nd==3)
		normal(1);
	else if(nd==4)
		normal(0); 
	else cout&lt;&lt;&quot;gameover!&quot;;
	
	system(&quot;pause&quot;);
	return 0;
} 
//update 3/12 v1.5
//
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[走迷宫v1.0代码]]></title>
        <id>https://Lu-fish.github.io/post/zoumigong-v1.0/</id>
        <link href="https://Lu-fish.github.io/post/zoumigong-v1.0/">
        </link>
        <updated>2020-03-12T07:17:54.000Z</updated>
        <content type="html"><![CDATA[<pre><code class="language-cpp">#include&lt;iostream&gt;
#include&lt;cstdlib&gt;
#include&lt;ctime&gt; 
using namespace std;
char map[100][100];
int N; 
bool vst[100][100];
int dx[4]={0,1,0,-1};
int dy[4]={1,0,-1,0};
void print(){
	for(int i=1;i&lt;=N;i++,cout&lt;&lt;endl)
		for(int j=1;j&lt;=N;j++)
			cout&lt;&lt;map[i][j];
}
void dfs(int x,int y){
	if(map[x][y]=='#'&amp;&amp;x==1&amp;&amp;y==1)return ; 
	vst[x][y]=1;	
	if(vst[N][N])return;
	for(int k=0;k&lt;4;k++){
		int nx=x+dx[k],ny=y+dy[k];
		if(!vst[nx][ny]&amp;&amp;map[nx][ny]=='o'&amp;&amp;nx&gt;=1&amp;&amp;nx&lt;=N&amp;&amp;ny&gt;=1&amp;&amp;ny&lt;=N){						
			dfs(nx,ny);			
		}
	}
}

int main(){
	srand(time(0));
	cout&lt;&lt;&quot;输入wasd控制方向，o为空地，#为墙，*为当前地点,右下角为终点\n&quot;;//介绍 
	cout&lt;&lt;&quot;输入地图大小：&quot;;
	cin&gt;&gt;N; 
	cout&lt;&lt;&quot;地图生成中……&quot;;
	while(1){				
		for(int i=1;i&lt;=N;i++)
			for(int j=1;j&lt;=N;j++)
			{				
				int a=rand()%7;
				if(a&lt;3)map[i][j]='#';
				else map[i][j]='o';
			}
		dfs(1,1);
		if(vst[N][N]==1)break;
		for(int i=1;i&lt;=N;i++)for(int j=1;j&lt;=N;j++) vst[i][j]=0;
	}
	system(&quot;cls&quot;); 
	map[1][1]='*';
	print();
	int x=1,y=1;
	while(1){
		if(x==N&amp;&amp;y==N){
			cout&lt;&lt;&quot;到了！\n&quot;;
			system(&quot;pause&quot;);
			return 0; 
		}
		char a;
		cin&gt;&gt;a;
		if(a=='w'){
			int nx=x+dx[3],ny=y+dy[3];
			if(map[nx][ny]=='#'||nx&lt;=0||nx&gt;N||ny&lt;=0||ny&gt;N){
				cout&lt;&lt;&quot;撞墙了QAQ\n&quot;;
				continue; 
			}
			else{
				map[x][y]='o';
				map[nx][ny]='*';
				system(&quot;cls&quot;);
				print();
				x=nx,y=ny;
			}
		}
		else if(a=='d'){//correct
			int nx=x+dx[0],ny=y+dy[0];
			if(map[nx][ny]=='#'||nx&lt;=0||nx&gt;N||ny&lt;=0||ny&gt;N){
				cout&lt;&lt;&quot;撞墙了QAQ\n&quot;;
				continue; 
			}
			else{
				map[x][y]='o';
				map[nx][ny]='*';
				system(&quot;cls&quot;);
				print();
				x=nx,y=ny;
			}
		}
		else if(a=='s'){
			int nx=x+dx[1],ny=y+dy[1];
			if(map[nx][ny]=='#'||nx&lt;=0||nx&gt;N||ny&lt;=0||ny&gt;N){
				cout&lt;&lt;&quot;撞墙了QAQ\n&quot;;
				continue; 
			}
			else{
				map[x][y]='o';
				map[nx][ny]='*';
				system(&quot;cls&quot;);
				print();
				x=nx,y=ny;
			}
		}
		else if(a=='a'){
			int nx=x+dx[2],ny=y+dy[2];
			if(map[nx][ny]=='#'||nx&lt;=0||nx&gt;N||ny&lt;=0||ny&gt;N){
				cout&lt;&lt;&quot;撞墙了QAQ\n&quot;;
				continue; 
			}
			else{
				map[x][y]='o';
				map[nx][ny]='*';
				system(&quot;cls&quot;);
				print();
				x=nx,y=ny;
			}
		}
		else{
			cout&lt;&lt;&quot;大哥您输入了什么鬼啊&quot;;
			continue; 
		}
	}
	system(&quot;pause&quot;);
} 
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[P5719 【深基4.例3】分类平均]]></title>
        <id>https://Lu-fish.github.io/post/p5719-shen-ji-4li-3-fen-lei-ping-jun/</id>
        <link href="https://Lu-fish.github.io/post/p5719-shen-ji-4li-3-fen-lei-ping-jun/">
        </link>
        <updated>2020-02-26T12:44:02.000Z</updated>
        <content type="html"><![CDATA[<p>思路：<s>%你</s>模拟</p>
<p>从1到n枚举每一个数，如果可以整除，第一个总和增加这个数，数字个数加一。</p>
<p>不可以的话，第二个总和增加这个数，数字个数加一。</p>
<p>重点：保留一位小数<s>不会printf的菜鸡只能用stl了</s></p>
<pre><code class="language-cpp">#include&lt;iostream&gt;
#include&lt;iomanip&gt;//确定精度要用
using namespace std;
int main(){
    int n,k;//如题目
    double ans1=0,ans2=0,cnt1=0,cnt2=0;
    //ans1表示第一个要求的数的总和，ans2同样，cnt1表示第一个要求的数的个数，cnt同样
    cin&gt;&gt;n&gt;&gt;k;//输入
    for(int i=1;i&lt;=n;i++){//枚举1~n
        if(i%k==0){//如果可以除尽
            ans1+=i;//总和++
            cnt1++;//个数++
        }
        else{
            ans2+=i;
            cnt2++;
        }
    }
    cout&lt;&lt;fixed&lt;&lt;setprecision(1)&lt;&lt;ans1/cnt1&lt;&lt;' ';//注意设置精度
    cout&lt;&lt;fixed&lt;&lt;setprecision(1)&lt;&lt;ans2/cnt2;
    return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[题解 AT3723 【Round Up the Mean】]]></title>
        <id>https://Lu-fish.github.io/post/ti-jie-at3723-round-up-the-mean/</id>
        <link href="https://Lu-fish.github.io/post/ti-jie-at3723-round-up-the-mean/">
        </link>
        <updated>2020-02-25T09:15:01.000Z</updated>
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/AT3723">题目传送门</a></p>
<h1 id="stl大法好">STL大法好</h1>
<p>介绍一下<strong>ceil</strong>函数。</p>
<p>这个函数可以将一个浮点数向上取整，正是题目所需。</p>
<ul>
<li>例如：ceil(1.2)=2</li>
</ul>
<p><strong>code：</strong></p>
<pre><code class="language-cpp">#include &lt;iostream&gt;
#include&lt;cmath&gt;//使用ceil要用
using namespace std;
long long n,m;//定义题目中两个整数
int main(){
   cin&gt;&gt;n&gt;&gt;m;
   cout&lt;&lt;ceil((n+m)/2.0);//求两个数平均数并向上取整
   cout&lt;&lt;endl;//atcoder 必备
   return 0;
}
</code></pre>
<hr>
<p>再讲一下<s>高精度</s>python做法</p>
<p>然鹅：python中也有一个ceil函数，与c++中的ceil函数意义一样。</p>
<p>用法：math.ceil(float a)</p>
<h2 id="交互模式下运行结果">交互模式下运行结果：</h2>
<figure data-type="image" tabindex="1"><img src="https://cdn.luogu.com.cn/upload/image_hosting/8kg9a2dg.png" alt="" loading="lazy"></figure>
<p>上完整代码：</p>
<pre><code class="language-python">import math   		    #引入math库，ceil在此库中
a,b=map(int,input().split())#输入a,b
print(math.ceil((a+b)/2))#求两个数平均数并向上取整
#print()在最后会自动换行所以不必再换行

</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://Lu-fish.github.io/post/hello-gridea/</id>
        <link href="https://Lu-fish.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>